Microsoft (R) Macro Assembler Version 14.16.27027.1	    05/04/19 16:21:17
CopyStr.asm						     Page 1 - 1


				; Copying a String (CopyStr.asm)

				; This program copies a string.

				.386
				.model flat,stdcall
				.stack 4096
				ExitProcess PROTO, dwExitCode:dword

				comment @
				.data
				source  byte  "This is the source string",0
				target  byte  SIZEOF source DUP(0),0

				.code
				main proc

					mov  esi,0				; index register
					mov  ecx,SIZEOF source	; loop counter
				L1:
					mov  al,source[esi]		; get a character from source
					mov  target[esi],al		; store it in the target
					inc  esi				; move to next character
					loop L1					; repeat for entire string

					invoke ExitProcess,0
				main endp
				end main
				@

				comment @
				;------------------Part1
				.data
				register TEXTEQU <dword>
				array register 1,2,3,4
				align 2

				.code
				main proc


				;------BYTE-----
				mov esi,0
				mov ecx, (lengthof array)/2
				L1:
				mov al, array[esi]
				mov bl,array[esi+1]
				mov array[esi],bl 
				mov  array[esi+1],al
				add esi,2
				Loop L1


				;------word-----
				mov esi,0
				mov ecx, (lengthof array)/2

				L1:
				mov ax, array[esi]
				mov bx,array[esi+ 2 ]
				mov array[esi],bx 
				mov  array[esi+ 2],ax
				add esi,4
				Loop L1


				;------dword-----
				mov esi,0
				mov ecx, (lengthof array)/2
				L1:
				mov eax, array[esi]
				mov ebx,array[esi+4]
				mov array[esi],ebx 
				mov  array[esi+4],eax
				add esi,8
				Loop L1


					


					invoke ExitProcess,0
				main endp
				end main


				;--------------------part 2
				.data 
				arrayd DWORD 0,2,5,9,10
				arrayr DWORD 4 DUP(0)
				.code
				main proc

				 mov esi,0
				 mov ecx, (lengthof arrayd)-1
				L1:
				mov eax,arrayd[esi]
				mov ebx,arrayd[esi+4]
				sub ebx,eax
				mov arrayr[esi],ebx
				add esi,4
				Loop L1
				 mov esi,0
				 mov ecx, (lengthof arrayd)-1
				 xor eax,eax
				 xor ebx,ebx
				L2:
				mov eax, arrayr[esi]
				add ebx,eax
				add esi,4
				Loop L2


					invoke ExitProcess,0
				main endp
				end main
				@

				;----------------------part3
 00000000			.data
 00000000 0001 0002 0003	arrayw word 1,2,3,4
	   0004
 00000008  00000004 [		arrayd dword lengthof arrayw DUP(0)
	    00000000
	   ]
 00000000			.code
 00000000			main proc
 00000000  BE 00000000		mov esi,0
 00000005  B9 00000003		mov ecx, (lengthof arrayw)-1
 0000000A			L1:
 0000000A  8B 86 00000000 R	mov eax,dword ptr arrayw[esi]
 00000010  89 86 00000008 R	mov  arrayd[esi],eax
 00000016  83 C6 02		add esi,2
 00000019  E2 EF		loop L1

					invoke ExitProcess,0
 0000001B  6A 00	   *	    push   +000000000h
 0000001D  E8 00000000 E   *	    call   ExitProcess
 00000022			main endp
				end main
Microsoft (R) Macro Assembler Version 14.16.27027.1	    05/04/19 16:21:17
CopyStr.asm						     Symbols 2 - 1




Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 DWord	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 00000018 DWord	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 00000022 DWord	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 00000022 Public STDCALL
  L1 . . . . . . . . . . . . . .	L Near	 0000000A _TEXT	


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
arrayd . . . . . . . . . . . . .	DWord	 00000008 _DATA	
arrayw . . . . . . . . . . . . .	Word	 00000000 _DATA	

	   0 Warnings
	   0 Errors
